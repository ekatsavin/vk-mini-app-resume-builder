import { Panel, PanelHeader, PanelHeaderBack, FormItem, Input, Button, Group, Textarea } from '@vkontakte/vkui';
import { useRouteNavigator } from '@vkontakte/vk-mini-apps-router';
import PropTypes from 'prop-types';
import { useState, useRef } from 'react';
import html2pdf from 'html2pdf.js';
import '../styles/resumeTemplates.css';
import { useEffect } from 'react'; 
import { FileTextIcon } from 'lucide-react';
import { Snackbar } from '@vkontakte/vkui';

export const Resume = ({ id, fetchedUser }) => {
  const routeNavigator = useRouteNavigator();

  const [fullName, setFullName] = useState('');
  const [phone, setPhone] = useState('');
  const [education, setEducation] = useState('');
  const [experience, setExperience] = useState('');
  const [aboutMe, setAboutMe] = useState('');
  const [skills, setSkills] = useState('');
  const [photo, setPhoto] = useState('');
  const [snackbar, setSnackbar] = useState(null);

  useEffect(() => {
    if (fetchedUser?.photo_200) {
      setPhoto(fetchedUser.photo_200);
    }
  }, [fetchedUser]);

  const [templateStyle, setTemplateStyle] = useState('classic');
  const [errors, setErrors] = useState({}); // —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—à–∏–±–æ–∫

  const resumeRef = useRef(null);

  const downloadResume = () => {
    if (!validateFields()) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è!');
      return;
    }
  
    if (!resumeRef.current) return;
  
    html2pdf()
      .set({
        margin: 10,
        filename: 'resume.pdf',
        image: { type: 'jpeg', quality: 0.98 },
        html2canvas: { scale: 2 },
        jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' },
      })
      .from(resumeRef.current)
      .save()
      .then(() => {
        setSnackbar(
          <Snackbar
            onClose={() => setSnackbar(null)}
            layout="vertical"
          >
            üìÑ –†–µ–∑—é–º–µ —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω–æ!
          </Snackbar>
        );
      });
  };  
  

  const validateFields = () => {
    const newErrors = {};
  
    if (!fullName.trim()) newErrors.fullName = '–§–ò–û –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ';
    if (!phone.trim()) newErrors.phone = '–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã';
    if (!education.trim()) newErrors.education = '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ';
    if (!experience.trim()) newErrors.experience = '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω';
    if (!photo) newErrors.photo = '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞';
  
    setErrors(newErrors);
  
    return Object.keys(newErrors).length === 0; // –µ—Å–ª–∏ –æ—à–∏–±–æ–∫ –Ω–µ—Ç ‚Äî –≤—Å—ë –æ–∫
  };
  

  return (
    <Panel id={id}>
      <PanelHeader before={<PanelHeaderBack onClick={() => routeNavigator.back()} />}>
        –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –†–µ–∑—é–º–µ
      </PanelHeader>
      {snackbar}
      {/* –ë–ª–æ–∫ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è */}
      <div ref={resumeRef} className={`resume-${templateStyle}`}>
        {photo && (
          <div style={{ textAlign: 'center', marginBottom: '16px' }}>
            <img
              src={photo}
              alt="–§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è"
              style={{ width: '100px', height: '100px', borderRadius: '50%', objectFit: 'cover' }}
            />
          </div>
        )}
        <h2 style={{ textAlign: 'center' }}>{fullName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</h2>
        <p><b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {phone || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
        <p><b>–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ:</b> {education || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
        <p><b>–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã:</b> {experience || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
        {aboutMe && <p><b>–û —Å–µ–±–µ:</b> {aboutMe}</p>}
        {skills && <p><b>–ù–∞–≤—ã–∫–∏:</b> {skills}</p>}
      </div>

      {/* –§–æ—Ä–º–∞ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è */}
      <Group>
      <FormItem top="–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è" status={errors.photo ? 'error' : 'default'} bottom={errors.photo}>
        <input
          type="file"
          accept="image/*"
          onChange={(e) => {
            const file = e.target.files[0];
            if (file) {
              const reader = new FileReader();
              reader.onloadend = () => {
                setPhoto(reader.result); // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
              };
              reader.readAsDataURL(file);
            }
          }}
        />
      </FormItem>

      <FormItem top="–§–ò–û" status={errors.fullName ? 'error' : 'default'} bottom={errors.fullName}>
        <Input
          value={fullName}
          onChange={(e) => setFullName(e.target.value)}
          placeholder={`${fetchedUser?.first_name || '–ò–≤–∞–Ω'} ${fetchedUser?.last_name || '–ò–≤–∞–Ω–æ–≤'}`}
        />
      </FormItem>

      <FormItem top="–¢–µ–ª–µ—Ñ–æ–Ω" status={errors.phone ? 'error' : 'default'} bottom={errors.phone}>
        <Input
          value={phone}
          onChange={(e) => setPhone(e.target.value)}
          placeholder="+7 (999) 123-45-67"
        />
      </FormItem>

      <FormItem top="–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ" status={errors.education ? 'error' : 'default'} bottom={errors.education}>
        <Input
          value={education}
          onChange={(e) => setEducation(e.target.value)}
          placeholder="–ú–ì–£ –∏–º. –ú.–í. –õ–æ–º–æ–Ω–æ—Å–æ–≤–∞, –§–∞–∫—É–ª—å—Ç–µ—Ç –í–ú–ö"
        />
      </FormItem>

      <FormItem top="–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã" status={errors.experience ? 'error' : 'default'} bottom={errors.experience}>
        <Input
          value={experience}
          onChange={(e) => setExperience(e.target.value)}
          placeholder="–°—Ç–∞–∂–∏—Ä–æ–≤–∫–∞ –≤ VK Education, —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π"
        />
      </FormItem>

      <FormItem top="–û —Å–µ–±–µ">
        <Textarea
          value={aboutMe}
          onChange={(e) => setAboutMe(e.target.value)}
          placeholder="–ù–∞—á–∏–Ω–∞—é—â–∏–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —Å –∏–Ω—Ç–µ—Ä–µ—Å–æ–º –∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π."
        />
      </FormItem>

      <FormItem top="–ù–∞–≤—ã–∫–∏ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)">
        <Input
          value={skills}
          onChange={(e) => setSkills(e.target.value)}
          placeholder="JavaScript, React, VK Mini Apps, HTML, CSS"
        />
      </FormItem>
      <FormItem top="–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è">
        <select
          value={templateStyle}
          onChange={(e) => setTemplateStyle(e.target.value)}
          style={{ width: '100%', padding: '8px', borderRadius: '6px' }}
        >
          <option value="classic">–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π</option>
          <option value="modern">–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π</option>
          <option value="creative">–ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–π</option>
          <option value="business">–î–µ–ª–æ–≤–æ–π</option>
        </select>
      </FormItem>

      <FormItem>
        <Button size="l" mode="primary" stretched onClick={downloadResume} before={<FileTextIcon size={20} />}>
          –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—é–º–µ (PDF)
        </Button>
      </FormItem>

      </Group>
    </Panel>
  );
};

Resume.propTypes = {
  id: PropTypes.string.isRequired,
  fetchedUser: PropTypes.object,
};
